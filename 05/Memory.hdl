// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // manipulate sel bits
    Not(in=address[14], out=notAddr14);
    Not(in=address[13], out=notAddr13);

    // Regular RAM16K
    // RAM16K address %B0XXXXXXXXXXXXXX
    // Only load when load is true and the address MSB is 0
    And(a=notAddr14, b=load, out=loadRAM16K);
    RAM16K(in=in, address=address[0..13], load=loadRAM16K, out=outRAM16K);

    // Screen
    // Screen memory map address %B10XXXXXXXXXXXXX
    // only load screen when load is true and the the address
    // MSB is 1 and 2nd MSB is 0
    And(a=address[14], b=notAddr13, out=selScreen);
    And(a=selScreen, b=load, out=loadScreen);
    Screen(in=in, address=address[0..12], load=loadScreen, out=outScreen);

    // Keyboard
    // Keyboard memory map address %B110000000000000
    Keyboard(out=outKeyboard);

    // Select between Keyboard and Screen
    Mux16(a=outScreen, b=outKeyboard, sel=address[13], out=screenOrKeyboard);

    // Select Between Keyboard and others
    Mux16(a=outRAM16K, b=screenOrKeyboard, sel=address[14], out=out);
}
