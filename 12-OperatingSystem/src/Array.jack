// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Array.jack

/**
 * Represents an array.
 * In the Jack language, arrays are instances of the Array class.
 * Once declared, the array entries can be accessed using the usual
 * syntax arr[i]. Each array entry can hold a primitive data type as 
 * well as any object type. Different array entries can have different 
 * data types.
 */
class Array {

    /** Constructs a new Array of the given size. */
    function Array new(int size) {
        var int arrayAddr;
        
        let arrayAddr = Memory.alloc(size);

        // this particular new() subroutine is a FUNCTION rather than a METHOD, thus
        // the returned value is not an object, but the start address of a consective
        // chunk of usable words on heap. This base address must be stored somewhere else
        // (such as on stack or virtual segments) for accessing this array.
        // Also note that the return type is Array, thus an array object, which is essentially
        // an integer address, is created with this function.
        return arrayAddr;
    }

    /** Disposes this array. */
    method void dispose() {
        // destroy an array object, represented by an integer, which is a base address of the address
        // the length of the array is implicitly indicated by the length of the allocated memory chunk
        // on heap.
        do Memory.deAlloc(this);

        return;
    }
}
