// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int row, col;
    static int keyboardMap;

    /** Initializes the keyboard. */
    function void init() {
        let keyboardMap = 24576;  
        let row = 0;
        let col = 0;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int key;

        let key = Memory.peek(keyboardMap);

        if (key = 0) {
            return 0;
        } else {
            return key;
        }
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c;

        let c = 0;

        while (c = 0) {
            let c = Keyboard.keyPressed();
        }

        do Output.printChar(c);
        // do Output.moveCursor(row, col);
        // do Output.printChar(c);
        // if (col = 7) {
        //     let row = row + 1; // new line
        //     let col = 0; // align left 
        // } else {
        //     let col = col + 1;
        // }

        while (~(Keyboard.keyPressed() = 0)) {
        }

        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var char c;
        var String input;

        // Print the prompt message
        do Output.printString(message);

        let input = String.new(30); // static length; unsafe.
        let c = Keyboard.readChar();

        while (~(c = String.newLine())) { // while the currently pressed key is not ENTER
            // backspace -> erase last character
            if (c = String.backSpace()) {
                do input.eraseLastChar();
            } else {
                do input.appendChar(c);
            }

            // update c: update must happen without appending the newline character to the string
            // otherwise the last character of the string is a new line character and 
            // a new prompt line will keep appearing
            let c = Keyboard.readChar();
        }

        // user pressed ENTER, input string done, return and move to the next line
        return input;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String input;
        var int val;

        let input = Keyboard.readLine(message);

        let val = input.intValue();

        return val;
    }
}
